akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  stdout-loglevel = DEBUG

  log-dead-letters = off

  actor.provider = "akka.cluster.ClusterActorRefProvider"

  remote {
    log-remote-lifecycle-events = off
  }

  cluster {
    auto-down-unreachable-after = 10s
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  topics-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 4
      parallelism-factor = 2.0
      parallelism-max = 6
    }
    throughput = 100
  }

  extensions = ["akka.cluster.client.ClusterClientReceptionist"]

}

Broker {
  in = 9011
  out = 9012
}

cassandra-journal {
  # FQCN of the cassandra journal plugin
  class = "akka.persistence.cassandra.journal.CassandraJournal"

  # Name of the keyspace to be created/used by the journal
  keyspace = "messaging"

  # Name of the table to be created/used by the journal
  table = "messaging_journal"

  # Replication factor to use when creating a keyspace
  replication-factor = 3

  # Write consistency level
  write-consistency = "QUORUM"

  # Read consistency level
  read-consistency = "QUORUM"

  # Maximum number of entries per partition (= columns per row).
  max-partition-size = 500000

  # Maximum size of result set
  max-result-size = 50001

  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.actor.default-dispatcher"

  # Dispatcher for fetching and replaying messages
  replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"
}

cassandra-snapshot-store {

  # FQCN of the cassandra snapshot store plugin
  class = "akka.persistence.cassandra.snapshot.CassandraSnapshotStore"

  # Name of the keyspace to be created/used by the snapshot store
  keyspace = "messaging"

  # Name of the table to be created/used by the snapshot store
  table = "messaging_snapshot"

  # Replication factor to use when creating a keyspace
  replication-factor = 3

  # Write consistency level
  write-consistency = "QUORUM"

  # Read consistency level
  read-consistency = "QUORUM"

  # Maximum number of snapshot metadata to load per recursion (when trying to
  # find a snapshot that matches specified selection criteria). Only increase
  # this value when selection criteria frequently select snapshots that are
  # much older than the most recent snapshot i.e. if there are much more than
  # 10 snapshots between the most recent one and selected one. This setting is
  # only for increasing load efficiency of snapshots.
  max-metadata-result-size = 10

  # Dispatcher for the plugin actor.
  plugin-dispatcher = "cassandra-snapshot-store.journal-dispatcher"

  # Default dispatcher for plugin actor.
  journal-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 4
      parallelism-max = 8
    }
  }
}